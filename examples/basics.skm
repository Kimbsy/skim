;;;; Commonly used functions

(bind (not (func (e)
                 (nand true e))

       and (func (a b)
                 (not (nand a b)))

       or (func (a b)
                    (nand (not a)
                          (not b)))

       + (func (a b)
               (- a (- b)))

       * (func (a b)
               (if (or (= a 0)
                       (= b 0))
                 0
                 (if (= b 1)
                   a
                   (if (= a 1)
                     b
                     (+ a (recur a (- b 1)))))))

       / (func (a b)
               (if (= b 0)
                 ##Inf
                 (if (< a b)
                   0
                   (+ 1 (recur (- a b) b)))))

       % (func (a b)
               (if (= a b)
                 0
                 (if (< a b)
                   a
                   (recur (- a b) b))))

       <= (func (a b)
                (or (< a b)
                    (= a b)))

       > (func (a b)
               (and (not (= a b))
                    (not (< a b))))

       >= (func (a b)
                (or (> a b)
                    (= a b))))


      ;; need to do something for the `bind` form to be valid.
      (= true true))
